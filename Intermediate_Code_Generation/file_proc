
 *> vawrgqer5bh 
 *> vawrgqer5bh 
 *> vawrgqer5bh 
 *> vawrgqer5bh 
 *> vawrgqer5bh 
 *> vawrgqer5bh 
IDENTIFICATION DIVISION.
PROGRAM-ID. MYPROGRAM.
AUTHOR. kriti arora.
DATE-WRITTEN. 98/56/5234.




DATA DIVISION.
WORKING-STORAGE SECTION.


01 WS-NUMBER PIC 9(5) VALUE 0.
01 WS-NUM1 PIC 9(5) VALUE 0.
01 WS-NUM2 PIC 9(5) VALUE 0.
01 WS-REMAINDER PIC 9(5) VALUE 0.
01 WS-QUOTIENT PIC 9(5) VALUE 0.
01 WS-PRODUCT PIC 9(5) VALUE 0.
01 WS-DIFFERENCE PIC 9(5) VALUE 0.
01 WS-AMOUNT1 PIC 9(5) VALUE 0.
01 WS-QUANTITY PIC 9(5) VALUE 0.
01 WS-AMOUNT2 PIC 9(5) VALUE 0.



PROCEDURE DIVISION.


ADD WS-NUMBER1, WS-NUMBER2 GIVING WS-SUM.

SUBTRACT WS-NUMBER1 FROM WS-NUMBER2 GIVING WS-TOTAL ROUNDED.

MULTIPLY WS-NUMBER1 BY WS-NUMBER2 GIVING WS-RESULT.
MULTIPLY WS-NUMBER BY 10 GIVING WS-RESULT.
MULTIPLY WS-NUMBER1 BY WS-NUMBER2 GIVING WS-TOTAL ROUNDED.

DIVIDE WS-NUM1 INTO WS-NUM2 GIVING WS-RESULT REMAINDER WS-REMAINDER.
DIVIDE WS-NUMBER BY 10 GIVING WS-RESULT.
DIVIDE WS-NUMBER BY 5 GIVING WS-RESULT.

 *> vawrgqer5bh

COMPUTE WS-SUM = WS-NUMBER1 + WS-NUMBER2.
COMPUTE WS-QUOTIENT = WS-NUMBER1 / WS-NUMBER2.
COMPUTE WS-PRODUCT = WS-NUMBER1 * WS-NUMBER2.
COMPUTE WS-DIFFERENCE = WS-NUMBER1 - WS-NUMBER2.
COMPUTE WS-TOTAL = 100 + WS-NUMBER * 10.
COMPUTE WS-TOTAL = WS-AMOUNT1 * WS-QUANTITY + WS-AMOUNT2.
COMPUTE WS-TOTAL = WS-AMOUNT1 * WS-QUANTITY + WS-AMOUNT2.
COMPUTE WS-RESULT = (WS-NUMBER1  + WS-NUMBER2) / WS-DIVISOR.

DISPLAY 'kriti'.

EVALUATE B
 *> vawrgqer5bh
WHEN 50 THRU 60
	ADD 5 TO B
WHEN 100
        ADD 5 TO B
        DIVIDE WS-NUMBER1 BY WS-NUMBER2 GIVING WS-TOTAL ROUNDED
         *> vawrgqer5bh
WHEN B <70
	DISPLAY "kriti"
WHEN OTHER
	DISPLAY 'WS-NUMBER is less than 50'
END-EVALUATE.



IF  name = 'Bhavya'
DISPLAY 'WS-NUMBER is positive.'
ELSE IF WS-NUMBER < 0
DISPLAY 'WS-NUMBER is negative.'
ELSE
DISPLAY 'WS-NUMBER is zero.'
END-IF.



IF WS-NUMBER < 50
 *> vawrgqer5bh
DISPLAY 'WS-NUMBER is less than 50.'
 *> vawrgqer5bh
ELSE
 *> vawrgqer5bh
DISPLAY 'WS-NUMBER is greater than or equal to 50.'
 *> vawrgqer5bh
END-IF
 *> vawrgqer5bh

PERFORM UNTIL COUNTER > 5
 *> vawrgqer5bh
DISPLAY 'Iteration ' COUNTER
 *> vawrgqer5bh
ADD 1 TO COUNTER
END-PERFORM.
 *> vawrgqer5bh
    


IF WS-NUMBER = 0
DISPLAY 'WS-NUMBER is positive.'
DISPLAY 'This is the positive branch.'
MOVE WS-NUMBER TO WS-TEMP
COMPUTE WS-TEMP = WS-TEMP * 2
DISPLAY 'Double of WS-NUMBER is ' WS-TEMP
ELSE
DISPLAY 'WS-NUMBER is not positive.'
DISPLAY 'This is the negative branch.'
MOVE WS-NUMBER TO WS-TEMP
COMPUTE WS-TEMP = WS-TEMP * 1
DISPLAY 'Absolute value of WS-NUMBER is ' WS-TEMP
END-IF

    
IF WS-NUMBER > 0
PERFORM 5 TIMES
DISPLAY 'Counter value is ' WS-COUNTER
END-PERFORM
END-IF

PERFORM UNTIL WS-NUMBER = 0
DISPLAY 'WS-NUMBER is ' WS-NUMBER
IF WS-NUMBER = 50 
    DISPLAY 'Breaking loop at WS-NUMBER = 50'    
END-IF
SUBTRACT 10 FROM WS-NUMBER
END-PERFORM
    
IF 0 > BHG
PERFORM 5 TIMES
DISPLAY 'Counter value is ' WS-COUNTER
END-PERFORM
END-IF
    
IF "Bhavya" > "KRITI"
PERFORM 5 TIMES
DISPLAY 'Counter value is ' WS-COUNTER
END-PERFORM
END-IF

IF WS-NUMBER = "KRITI"
PERFORM 5 TIMES
DISPLAY 'Counter value is ' WS-COUNTER
END-PERFORM
END-IF

IF WS-NUMBER > KRITI
PERFORM 5 TIMES
DISPLAY 'Counter value is ' WS-COUNTER
END-PERFORM
END-IF

IF "WS-NUMBER" = UDF
PERFORM 5 TIMES
DISPLAY 'Counter value is ' WS-COUNTER
END-PERFORM
END-IF

IF WS-NUMBER = KRITI - WS-NUMBER
PERFORM 5 TIMES
DISPLAY 'Counter value is ' WS-COUNTER
END-PERFORM
END-IF


STOP RUN.
